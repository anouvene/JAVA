package hb.java.numbers;
import static java.lang.Math.*;

import java.text.NumberFormat;
import java.util.Random;

/**
 * Java Number
 * @author Antoine NOUVENE
 *
 */
public class TheNumber {
	
	/**
	 * Check if string contains a number
	 * @param s String to check
	 * @return boolean
	 */
	public boolean isValidNumber(String s){
		try{
			Integer.parseInt(s);
			return true;
		} catch(NumberFormatException nfe){
			nfe.printStackTrace();
			return false;
		}
	}
	
	/**
	 * To round a number
	 * @param d float number to round
	 * @return float
	 */
	public int arround(float d){	
		return round(d); // Math.round(number)
	}
	
	/**
	 * Compare 2 floats with tolerence
	 * @param f1 float
	 * @param f2 float
	 * @param tolerance float
	 * @return boolean
	 */
	public boolean compareFloatsWithTolerence(float f1, float f2, float tolerance){
		if(abs(f1 - f2) < tolerance){
			return true;
		} else {
			return false;
		}		
	}
	
	/**
	 * To get a percent of a double
	 * @param number double
	 * @return String Percent
	 */
	public String getPercentOfDouble(double number){
		NumberFormat percentFormatter = NumberFormat.getPercentInstance();
		String percent = percentFormatter.format(number);
		return percent;
	}
	
	/**
	 * Decimal to Binaire, Hexadecimal, Octal
	 * @param number Number converted
	 */
	public void printIntToBinaryHexaOctal(int number){
		System.out.println("\n\n" + number + " en binaire donne : " + Integer.toBinaryString(number));
		System.out.println(number + " en hexadecimal donne : " + Integer.toHexString(number));
		System.out.println(number + " en octal donne : " + Integer.toOctalString(number));		
	}
	
	/**
	 * To get a random number in a range
	 * @param rd Random
	 * @param range Range of random number
	 * @return Int number generated by a random method
	 */
	public int getRandomInt(Random rd, int range){
		return rd.nextInt(range);
	}
	
	/**
	 * To generate a double number
	 * @param rd instance of class Random
	 * @return double number generated by a random method
	 */
	public double getRandomDouble(Random rd){
		return rd.nextDouble();
	}
	
	/**
	 * To generate a float number
	 * @param rd instance of class Random
	 * @return float number generated by a random method
	 */
	public float getRandomFloat(Random rd){
		return rd.nextFloat();
	}
	
	/**
	 * Convert int number to string
	 * @param numberToConvert Number to convert
	 * @return String number converted to string
	 */
	public String convertIntegerToString(int numberToConvert){
		return String.valueOf(numberToConvert);
	}
	
	/**
	 * Convert Double number to string
	 * @param numberToConvert Number to convert
	 * @return String number converted to string
	 */
	public String convertDoubleToString(double numberToConvert){
		return String.valueOf(numberToConvert);
	}
	
	/**
	 * Convert string number to int
	 * @param stringToConvert String to convert
	 * @return int number from string
	 */
	public int convertStringToInteger(String stringToConvert){
		return Integer.parseInt(stringToConvert);
	}
	
	
	/**
	 * Convert string number to Double
	 * @param stringToConvert String to convert
	 * @return Double number from string
	 */
	public Double convertStringToDouble(String stringToConvert){
		return Double.parseDouble(stringToConvert);
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
}
